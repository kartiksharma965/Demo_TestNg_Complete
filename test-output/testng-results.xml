<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-31T13:47:18 IST" name="Suite" finished-at="2024-05-31T13:47:22 IST" duration-ms="4376">
    <groups>
    </groups>
    <test started-at="2024-05-31T13:47:18 IST" name="Test" finished-at="2024-05-31T13:47:22 IST" duration-ms="4376">
      <class name="RealTimeScenario.Example_2">
        <test-method signature="testcase1()[pri:0, instance:RealTimeScenario.Example_2@202b0582]" started-at="2024-05-31T13:47:18 IST" name="testcase1" finished-at="2024-05-31T13:47:22 IST" duration-ms="4043" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:42)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:315)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:147)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at RealTimeScenario.Example_2.testcase1(Example_2.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:RealTimeScenario.Example_2@202b0582]" started-at="2024-05-31T13:47:18 IST" name="testcase2" finished-at="2024-05-31T13:47:22 IST" duration-ms="4276" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:42)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:315)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:147)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at RealTimeScenario.Example_2.testcase2(Example_2.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
      </class> <!-- RealTimeScenario.Example_2 -->
      <class name="RealTimeScenario.Example_3">
        <test-method signature="testcase2()[pri:0, instance:RealTimeScenario.Example_3@7ef82753]" started-at="2024-05-31T13:47:18 IST" name="testcase2" finished-at="2024-05-31T13:47:18 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase1()[pri:0, instance:RealTimeScenario.Example_3@7ef82753]" started-at="2024-05-31T13:47:18 IST" name="testcase1" finished-at="2024-05-31T13:47:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase3()[pri:0, instance:RealTimeScenario.Example_3@7ef82753]" started-at="2024-05-31T13:47:18 IST" name="testcase3" finished-at="2024-05-31T13:47:18 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- RealTimeScenario.Example_3 -->
      <class name="RealTimeScenario.Example_1">
        <test-method signature="testcase2()[pri:0, instance:RealTimeScenario.Example_1@2eae8e6e]" started-at="2024-05-31T13:47:18 IST" name="testcase2" finished-at="2024-05-31T13:47:18 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testCase1()[pri:0, instance:RealTimeScenario.Example_1@2eae8e6e]" started-at="2024-05-31T13:47:18 IST" name="testCase1" finished-at="2024-05-31T13:47:18 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- RealTimeScenario.Example_1 -->
      <class name="RealTimeScenario.Example_4">
        <test-method signature="testcase2()[pri:0, instance:RealTimeScenario.Example_4@3b0fe47a]" started-at="2024-05-31T13:47:18 IST" name="testcase2" finished-at="2024-05-31T13:47:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:RealTimeScenario.Example_4@3b0fe47a]" started-at="2024-05-31T13:47:18 IST" name="testcase3" finished-at="2024-05-31T13:47:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method signature="testcase1()[pri:0, instance:RealTimeScenario.Example_4@3b0fe47a]" started-at="2024-05-31T13:47:18 IST" name="testcase1" finished-at="2024-05-31T13:47:18 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase1()[pri:0, instance:RealTimeScenario.Example_4@3b0fe47a]" started-at="2024-05-31T13:47:18 IST" name="testcase1" finished-at="2024-05-31T13:47:18 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase1()[pri:0, instance:RealTimeScenario.Example_4@3b0fe47a]" started-at="2024-05-31T13:47:18 IST" name="testcase1" finished-at="2024-05-31T13:47:18 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
      </class> <!-- RealTimeScenario.Example_4 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
